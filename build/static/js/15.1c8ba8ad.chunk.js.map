{"version":3,"sources":["components/Auth/Register/Register.jsx"],"names":["CssTextField","withStyles","root","backgroundColor","margin","position","bottom","left","color","height","padding","outline","display","borderBottomColor","borderColor","TextField","CssTextField2","withWidth","width","currentTheme","useContext","ThemeContext","useState","vis","setVis","name","pass","err","setErr","useStyles","makeStyles","theme","regButt","checkErrorName","e","value","target","test","checkErrorPass","registration","a","preventDefault","document","querySelector","data","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","userData","result","showMess","message","Snackbar","show","actionTextColor","text","actionText","pos","classes","style","zIndex","top","right","flexDirection","justifyContent","alignItems","fontFamily","flexWrap","borderRadius","maxWidth","minHeight","marginTop","marginBottom","boxShadow","border","variant","to","exact","cursor","fontSize","fontWeight","textDecoration","InputProps","className","id","placeholder","onChange","required","error","Boolean","helperText","type","onClick"],"mappings":"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","file":"static/js/15.1c8ba8ad.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport { TextField, makeStyles, Box, Typography, Paper, IconButton, Icon, withStyles } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff, People, Close } from '@material-ui/icons';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Snackbar from 'node-snackbar';\r\nimport { ThemeContext } from \"../../../context/themeContext\";\r\n\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& .MuiFormHelperText-root':{\r\n      backgroundColor:'rgb(20, 19, 34)',\r\n      margin:'0px',\r\n      position:'absolute',\r\n      bottom:'-21px',\r\n      left:'0px'\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      color: '#7575a3',\r\n      height:'28px',  \r\n      backgroundColor:'#232135',\r\n      padding:'8px'  \r\n    },\r\n    // '& .MuiInputBase-input:focus': {\r\n    //   outline:'2px solid #7575a3'\r\n    // },\r\n    '& .MuiInput-underline:hover': {\r\n      outline:'2px solid #7575a3'\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      display:'none',\r\n      borderBottomColor: '#7575a3',\r\n    },\r\n    '& .MuiInput-underline:focus-within': {\r\n      outline:'2px solid #7575a3'\r\n    },\r\n    '& .MuiInput-underline:before': {\r\n      display:'none',\r\n      borderBottomColor: '#7575a3',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: '#7575a3',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: '#7575a3',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#7575a3',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst CssTextField2 = withStyles({\r\n  root: {\r\n    '& .MuiFormHelperText-root':{\r\n      margin:'0px',\r\n      position:'absolute',\r\n      bottom:'-21px',\r\n      left:'0px'\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height:'28px',  \r\n      padding:'8px'  \r\n    },\r\n    // '& .MuiInputBase-input:focus': {\r\n    //   outline:'2px solid #78a3ff'\r\n    // },\r\n    '& .MuiInput-underline:hover': {\r\n      outline:'1px solid #78a3ff'\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      display:'none',\r\n      borderBottomColor: '#78a3ff',\r\n    },\r\n    '& .MuiInput-underline:focus-within': {\r\n      outline:'1px solid #78a3ff'\r\n    },\r\n    '& .MuiInput-underline:before': {\r\n      display:'none',\r\n      borderBottomColor: '#78a3ff',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: '#78a3ff',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: '#78a3ff',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#78a3ff',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n\r\n\r\nconst Register = ({ width }) => {\r\n  const { currentTheme } = useContext(ThemeContext);\r\n  const [vis, setVis] = useState(false);\r\n  const [err, setErr] = useState({\r\n    name: '',\r\n    pass: ''\r\n\r\n  });\r\n\r\n\r\n  const useStyles = makeStyles(theme =>({\r\n    regButt:{\r\n      '&:hover':{\r\n        backgroundColor:'#42baf9!important'\r\n      }\r\n    }\r\n  }));\r\n\r\n  const checkErrorName = (e) => {\r\n    setErr({ ...err, name: '' })\r\n    let value = e.target.value;\r\n\r\n    const notContainsLetters = /^.*[а-яА-Я]+.*$/\r\n\r\n    if(!value) {\r\n      setErr({ ...err, name: 'Введите имя пользователя' })\r\n      return\r\n    }\r\n    if (\r\n      notContainsLetters.test(value)\r\n     ) {\r\n      setErr({ ...err, name: 'Русская раскладка запрещена!' })\r\n    } else {\r\n      setErr({ ...err, name: '' })\r\n    }\r\n\r\n  }\r\n\r\n  const checkErrorPass = (e) => {\r\n    setErr({ ...err, pass: '' })\r\n    let value = e.target.value;\r\n\r\n    const notContainsLetters = /^.*[а-яА-Я]+.*$/\r\n\r\n    if(!value) {\r\n      setErr({ ...err, pass: 'Введите ваш пароль' })\r\n    return\r\n    }\r\n    if (\r\n      notContainsLetters.test(value)\r\n    ) {\r\n      setErr({ ...err, pass: 'Русская раскладка запрещена!' })\r\n    } else {\r\n      setErr({ ...err, pass: '' })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const registration = async (e) => {\r\n    e.preventDefault();\r\n    const name = document.querySelector('#name').value;\r\n    const pass = document.querySelector('#pass').value;\r\n    const data = {\r\n      \"username\": name,\r\n      \"password\": pass\r\n    };\r\n    console.log(data)\r\n    await fetch('https://secure.platinumpay.cc/v1/client/auth/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then(userData => {\r\n        console.log(userData)\r\n        if (userData.result) {\r\n          showMess('Вы успешно зарегистрировались!')\r\n        }\r\n        else {\r\n          showMess('Что-то пошло не так, попробуйте еще раз.')\r\n        }\r\n      })\r\n  }\r\n\r\n  const showMess = (message)=>{\r\n    Snackbar.show({\r\n      actionTextColor: '#7575a3', \r\n      text: message,\r\n      actionText: 'ОК',\r\n      pos: 'bottom-right'\r\n    });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        style={{\r\n          zIndex: '999',\r\n          position: 'absolute',\r\n          top: '0px',\r\n          left: '0px',\r\n          right: '0xp',\r\n          bottom: '0px',\r\n          width: '100%',\r\n          height: '100%',\r\n          display: \"flex\",\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: currentTheme === 'light' ? 'white' : '#141322',\r\n          fontFamily:'Mukta\",sans-serif'\r\n        }}>\r\n        {/* <Typography variant='h4' style={{\r\n          marginBottom:'40px',\r\n          marginTop: width === 'xs' ? '40%' : '0px',\r\n          color: currentTheme === 'dark' ? '#aeaee0' : ''\r\n        }}>\r\n          Добро пожаловать\r\n        </Typography> */}\r\n        <Paper\r\n          style={{\r\n            zIndex: '99999',\r\n            padding: '40px 30px',\r\n            display: \"flex\",\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            borderRadius: '8px',\r\n            maxWidth: width === 'xs' ? '80%' : width === \"sm\" ? '60%' : width === \"md\" ? '40%' : '450px',\r\n            minHeight: '350px',\r\n            position: 'relative',\r\n            marginTop: '110px',\r\n            marginBottom: '40px',\r\n            backgroundColor: currentTheme === 'dark' ? '#141322' : '',\r\n            boxShadow: 'none',\r\n            border: 'none'\r\n          }}>\r\n          <Box style={{\r\n            width:'100%',\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center'\r\n          }}>\r\n            <Typography variant=\"h5\" style={{\r\n            width: '100%',\r\n            color: currentTheme === 'dark' ? '#7575a3' : ''\r\n          }}>\r\n            Регистрация\r\n          </Typography>\r\n          <NavLink\r\n            to=\"/\"\r\n            exact\r\n            style={{\r\n              color: 'red!important',\r\n              border: '0px',\r\n              cursor: 'pointer',\r\n              fontSize: '20px',\r\n              fontWeight: 'bold',\r\n              textDecoration: 'none',\r\n              zIndex: '99999'\r\n            }}\r\n          >\r\n            <IconButton >\r\n              <Close style={{\r\n                color: currentTheme === 'dark' ? '#7575a3' : '#3f51b5'\r\n              }}></Close>\r\n            </IconButton>\r\n          </NavLink>\r\n\r\n          \r\n          </Box>\r\n          <Box style={{\r\n            position: 'relative',\r\n            width: '100%'\r\n          }}>\r\n            {currentTheme === 'dark' ?\r\n              <CssTextField\r\n                InputProps={{ className: classes.root }}\r\n                id=\"name\"\r\n                placeholder=\"Введите имя пользователя\"\r\n                onChange={checkErrorName}\r\n                required\r\n                error={Boolean(err.name)}\r\n                helperText={err.name}\r\n                style={{\r\n                  margin: '30px 0px 10px 0px',\r\n                  backgroundColor: currentTheme === 'dark' ? '#0c0c1b' : 'white',\r\n                  width: '100%'\r\n                }}\r\n              />\r\n              :\r\n              <CssTextField2\r\n                InputProps={{ className: classes.root }}\r\n                id=\"name\"\r\n                placeholder=\"Введите имя пользователя\"\r\n                onChange={checkErrorName}\r\n                required\r\n                error={Boolean(err.name)}\r\n                helperText={err.name}\r\n                style={{\r\n                  margin: '30px 0px 10px 0px',\r\n                  backgroundColor: currentTheme === 'dark' ? '#0c0c1b' : 'white',\r\n                  width: '100%',\r\n                  border: '1px solid #e4e9f0'\r\n                }}\r\n              />}\r\n            <Icon style={{\r\n              position: 'absolute',\r\n              right: \"10px\",\r\n              top: '42px',\r\n              color: currentTheme === 'dark' ? '#aeaee0!important' : '',\r\n            }}\r\n            >\r\n              <People\r\n                style={{\r\n                  color: currentTheme === 'dark' ? '#aeaee0' : ''\r\n                }}></People>\r\n            </Icon>\r\n          </Box>\r\n          <Box style={{\r\n            position: 'relative',\r\n            width: '100%'\r\n          }}>\r\n            {currentTheme === 'dark' ?\r\n              <CssTextField\r\n                InputProps={{ className: classes.root }}\r\n                id=\"pass\"\r\n                placeholder=\"Введите пароль\"\r\n                onChange={checkErrorPass}\r\n                required\r\n                error={Boolean(err.pass)}\r\n                helperText={err.pass}\r\n                style={{\r\n                  margin: '10px 0px',\r\n                  backgroundColor: currentTheme === 'dark' ? '#0c0c1b' : 'white',\r\n                  color: currentTheme === 'dark' ? '#aeaee0' : '',\r\n                  width: '100%'\r\n                }}\r\n                type={!vis ? 'password' : ''}\r\n              />\r\n              :\r\n              <CssTextField2\r\n                InputProps={{ className: classes.root }}\r\n                id=\"pass\"\r\n                placeholder=\"Введите пароль\"\r\n                onChange={checkErrorPass}\r\n                required\r\n                error={Boolean(err.pass)}\r\n                helperText={err.pass}\r\n                style={{\r\n                  margin: '10px 0px',\r\n                  backgroundColor: currentTheme === 'dark' ? '#0c0c1b' : 'white',\r\n                  color: currentTheme === 'dark' ? '#aeaee0' : '',\r\n                  width: '100%',\r\n                  border: '1px solid #e4e9f0'\r\n                }}\r\n                type={!vis ? 'password' : ''}\r\n              />}\r\n            {!vis ?\r\n              <IconButton style={{\r\n                position: 'absolute',\r\n                right: \"-2px\",\r\n                top: '9px',\r\n              }}\r\n                onClick={() => { setVis(!vis) }}\r\n              >\r\n                <Visibility style={{\r\n                  color: currentTheme === 'dark' ? '#aeaee0' : ''\r\n                }}></Visibility>\r\n              </IconButton>\r\n              :\r\n              <IconButton style={{\r\n                position: 'absolute',\r\n                right: \"-2px\",\r\n                top: '9px'\r\n              }}\r\n                onClick={() => { setVis(!vis) }}\r\n              >\r\n                <VisibilityOff style={{\r\n                  color: currentTheme === 'dark' ? '#aeaee0' : ''\r\n                }}></VisibilityOff>\r\n              </IconButton>\r\n            }\r\n          </Box>\r\n          <Button\r\n            type='submit'\r\n            variant=\"contained\"\r\n            className={classes.regButt}\r\n            style={{\r\n              color:'white',\r\n              backgroundColor: 'rgb(75, 124, 243)',\r\n              marginTop: '20px',\r\n              borderRadius: '2px',\r\n              fontSize: '15px',\r\n              height: '45px',\r\n              width: '100%'\r\n            }}\r\n            onClick={err.pass || err.name ? null : registration}\r\n          >\r\n            Зарегистрироваться\r\n            </Button>\r\n          <Box\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              width: '100%'\r\n            }}\r\n          >\r\n            <NavLink\r\n              to=\"/login\"\r\n              exact\r\n              style={{\r\n                color: 'rgb(75, 124, 243)',\r\n                border: '0px',\r\n                margin: '15px 0px ',\r\n                cursor: 'pointer',\r\n                fontSize: '15px',\r\n                textDecoration: 'none',\r\n              }}\r\n            >\r\n              Уже есть аккаунт?\r\n            </NavLink>\r\n          </Box>\r\n        </Paper>\r\n\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default withWidth()(Register);"],"sourceRoot":""}